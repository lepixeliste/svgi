{"mappings":"AAOA,yBAAyB,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC;AAExD;IACE,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,MAAM,CAAC;IACf,KAAK,EAAE,MAAM,EAAE,CAAC;CACjB;AAID,0BAA0B,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,IAAI,CAG7E;AAED,+BAA+B,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAExE;AAED,0BACE,IAAI,EAAE,MAAM,GACX,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,SAAS,CAExC;AAED,wBAAwB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,OAAO,CAsC7D;AAED,yBACE,MAAM,EAAE,MAAM,EACd,IAAI,EAAE,MAAM,EACZ,aAAa,CAAC,EAAE,MAAM,EAAE,GACvB,MAAM,CAmBR","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"/**\n * SVG Icon Maker\n *\n * @version 1.0.1\n * @author Charlie LEDUC <contact@pixeliste.fr>\n */\n\nexport type IconValues = (string | number | number[])[];\n\nexport interface IconObj {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  paths: string[];\n}\n\nconst _SVGI_FAMILIES_: Record<string, Record<string, IconValues>> = {};\n\nexport function addFamily(name: string, set: Record<string, IconValues>): void {\n  if (!name.length) return;\n  _SVGI_FAMILIES_[name] = set;\n}\n\nexport function getFamilies(): Record<string, Record<string, IconValues>> {\n  return _SVGI_FAMILIES_;\n}\n\nexport function getFamily(\n  name: string\n): Record<string, IconValues> | undefined {\n  return _SVGI_FAMILIES_[name];\n}\n\nexport function getIcon(family: string, name: string): IconObj {\n  const set = _SVGI_FAMILIES_[family];\n\n  const values: IconValues = set[name] ?? [0, 0, \"\"];\n  const startval = values.length ? values[0] : 0;\n  const midval = values.length ? values[1] : 0;\n  const endval = values.length > 2 ? values[2] : midval;\n  const strval =\n    typeof endval === \"string\"\n      ? endval ?? \"\"\n      : typeof midval === \"string\"\n      ? midval ?? \"\"\n      : \"\";\n\n  const isStartArray = Array.isArray(startval);\n  const xmin = isStartArray && startval.length ? startval[0] ?? 0 : 0;\n  const ymin = isStartArray && startval.length > 1 ? startval[1] ?? 0 : 0;\n  const width =\n    isStartArray && startval.length > 2\n      ? startval[2] ?? 0\n      : typeof startval === \"number\"\n      ? startval ?? 0\n      : 0;\n  const height =\n    isStartArray && startval.length > 3\n      ? startval[3] ?? 0\n      : typeof midval === \"number\"\n      ? midval ?? 0\n      : 0;\n  const paths = strval.split(\"|\");\n\n  return {\n    x: xmin,\n    y: ymin,\n    width: width,\n    height: height,\n    paths: paths\n  };\n}\n\nexport function makeIcon(\n  family: string,\n  name: string,\n  customClasses?: string[]\n): string {\n  const icon = getIcon(family, name);\n  const classList = [family, `${family}-${name}`];\n  if (customClasses?.length) {\n    classList.push(...customClasses);\n  }\n  const classNames = classList.filter((e) => e.length).join(\" \");\n  const viewBox = [icon.x, icon.y, icon.width, icon.height].join(\" \");\n\n  const elements: string[] = [\n    `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"${classNames}\" data-name=\"${name}\" role=\"img\" aria-hidden=\"true\" viewBox=\"${viewBox}\">`,\n    ...icon.paths.map((path, p) => {\n      const pathClass = [`${family}-path`, `${family}-path-${p + 1}`].join(\" \");\n      return `<path fill=\"currentColor\" class=\"${pathClass}\" d=\"${path}\" />`;\n    }),\n    \"</svg>\"\n  ];\n\n  return elements.join(\"\");\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}